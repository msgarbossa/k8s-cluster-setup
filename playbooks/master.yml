---

- name: Configure for k8s master node
  hosts: k8smaster
  gather_facts: true
  become: true

  tasks:

  # - name: Check Docker images
  #   command: docker images
  #   register: docker_image_list
  #   changed_when: false

  # Only run if kube-apiserver not found in "docker images"
  # TODO: add condition to compare version (could simply include a grep in above command)
  # - name: Pull images if required
  #   shell: |
  #     kubeadm config images pull
  #   when: docker_image_list.stdout.find('kube-apiserver') == -1

  - name: Check if cluster is created by looking for token
    command: kubeadm token list
    changed_when: false
    failed_when: false
    register: token_list

  - name: debug token_list
    debug:
      var: token_list

  - name: Init cluster
    environment:
      POD_NETWORK_CIDR: "{{ pod_network_cidr }}"
      CONTROL_PLANE_ENDPOINT: "{{ control_plane_endpoint }}"
      IPv4: "{{ ansible_default_ipv4['address'] }}"
    shell: |
      cd $HOME
      kubeadm init \
        --pod-network-cidr=${POD_NETWORK_CIDR} \
        --control-plane-endpoint=${CONTROL_PLANE_ENDPOINT} \
        --apiserver-advertise-address=${IPv4} >> cluster_initialized.txt
    args:
      creates: cluster_initialized.txt
    when:
      - token_list.failed == true

  - name: Ensure kubelet service is enabled and started
    systemd:
      name: kubelet
      state: started
      enabled: yes

