---

- name: Basic configurations for k8snodes
  hosts: k8snodes
  # hosts: all
  gather_facts: true
  become: true

  tasks:

  - name: Add Google Apt signing key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes apt repository
    apt_repository:
      repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      update_cache: yes
      filename: kubernetes
  
  - name: Install basic packages
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: latest

  - name: Prevent Kubernetes packages from being upgraded
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
      - kubelet
      - kubeadm
      - kubectl

  - name: Disable swap filesystem
    mount:
      path: "none"
      src: /swap.img
      state: absent
      fstype: swap

  - name: Check swap
    command: swapon
    register: swap_status
    changed_when: false

  - name: Disable swap required for kubernetes
    shell: |
      swapoff -a
    when: swap_status.stdout | length > 0

  - name: Remove swapfile /swap.img
    file:
      path: /swap.img
      state: absent

  - name: Copy /etc/modules-load.d/containerd.conf to load modules on boot
    copy:
      content: |
        overlay
        br_netfilter
      dest: /etc/modules-load.d/containerd.conf
      owner: root
      group: root
      mode: 0644

  - name: Load kernel modules
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter

  - name: Copy /etc/sysctl.d/kubernetes.conf
    copy:
      content: |
               net.bridge.bridge-nf-call-ip6tables = 1
               net.bridge.bridge-nf-call-iptables = 1
               net.ipv4.ip_forward = 1
               net.ipv6.conf.all.disable_ipv6 = 1
               net.ipv6.conf.default.disable_ipv6 = 1
      dest: /etc/sysctl.d/kubernetes.conf
      owner: root
      group: root
      mode: 0644
    notify:
      - reload sysctl

  - name: Force running of all notified handlers now (sysctl)
    meta: flush_handlers

  # - name: Create docker_lv LV
  #   lvol:
  #     vg: app_vg
  #     lv: docker_lv
  #     size: 20g

  # - name: Create filesystem on docker_lv
  #   filesystem:
  #     fstype: xfs
  #     dev: /dev/app_vg/docker_lv

  # - name: Mount /var/lib/docker
  #   mount:
  #     name: /var/lib/docker
  #     src: /dev/mapper/app_vg-docker_lv
  #     fstype: xfs
  #     opts: nofail
  #     state: mounted

  - name: Install container runtime (containerd)
    apt:
      name:
        - containerd
      state: latest

  - name: Create /etc/NetworkManager/conf.d directory
    file:
      path: /etc/NetworkManager/conf.d
      state: directory
      mode: '0755'

  - name: Copy /etc/NetworkManager/conf.d/calico.conf
    copy:
      content: |
        [keyfile]
        unmanaged-devices=interface-name:cali*;interface-name:tunl*;interface-name:vxlan.calico
      dest: /etc/NetworkManager/conf.d/calico.conf
      owner: root
      group: root
      mode: 0644

  - name: Include reboot role
    include_role:
      name: reboot

  handlers:
    - name: reload sysctl
      shell: sysctl --system

    # - name: restart docker
    #   systemd:
    #     name: docker
    #     state: restarted
