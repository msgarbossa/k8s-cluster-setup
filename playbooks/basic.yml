---

- name: Basic configurations for k8snodes
  hosts: k8snodes
  gather_facts: true
  become: true

  tasks:

  - name: Set hostname according to Ansible inventory
    hostname:
      name: "{{ inventory_hostname }}"

  - name: Disable IPv6 on boot
    lineinfile:
      path: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
      line: GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1"
    notify:
      - update-grub

  # - name: Install basic packages
  #   apt:
  #     name:
  #       - curl
  #       - apt-transport-https
  #     state: latest

  - name: Add Google Apt signing key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes apt repository
    apt_repository:
      repo: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      update_cache: yes
      filename: kubernetes
  
  - name: Install basic packages
    apt:
      name:
        - vim
        - git
        - curl
        - wget
        - kubelet
        - kubeadm
        - kubectl
      state: latest

  - name: Prevent Kubernetes packages from being upgraded
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
      - kubelet
      - kubeadm
      - kubectl

  - name: Disable swap filesystem
    mount:
      path: "none"
      src: /swap.img
      state: absent
      fstype: swap

  - name: Check swap
    command: swapon
    register: swap_status
    changed_when: false

  - name: Disable swap required for kubernetes
    shell: |
      swapoff -a
    when: swap_status.stdout | length > 0

  - name: Remove swapfile /swap.img
    file:
      path: /swap.img
      state: absent

  - name: Load kernel modules
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter

  - name: Copy /etc/sysctl.d/kubernetes.conf
    copy:
      content: |
               net.bridge.bridge-nf-call-ip6tables = 1
               net.bridge.bridge-nf-call-iptables = 1
               net.ipv4.ip_forward = 1
               net.ipv6.conf.all.disable_ipv6 = 1
               net.ipv6.conf.default.disable_ipv6 = 1
      dest: /etc/sysctl.d/kubernetes.conf
      owner: root
      group: root
      mode: 0644
    notify:
      - reload sysctl

  - name: Force running of all notified handlers now (sysctl)
    meta: flush_handlers

  - name: Add Docker Apt signing key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker apt repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb['codename'] }} stable
      state: present
      update_cache: yes
      filename: docker

  - name: Install basic packages
    apt:
      name:
        - containerd.io
        - docker-ce
        - docker-ce-cli
      state: latest

  - name: Create /etc/systemd/system/docker.service.d directory
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      mode: '0755'
      recurse: True

  - name: Copy /etc/docker/daemon.json
    copy:
      content: |
               {
                 "exec-opts": ["native.cgroupdriver=systemd"],
                 "log-driver": "json-file",
                 "log-opts": {
                   "max-size": "100m"
                 },
                 "storage-driver": "overlay2"
               }
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: 0644
    notify:
      - restart docker

  - name: Force running of all notified handlers now (docker)
    meta: flush_handlers

  - name: Ensure docker service is enabled and started
    systemd:
      name: docker
      state: started
      enabled: yes

  - name: Create /etc/NetworkManager/conf.d directory
    file:
      path: /etc/NetworkManager/conf.d
      state: directory
      mode: '0755'

  - name: Copy /etc/NetworkManager/conf.d/calico.conf
    copy:
      content: |
        [keyfile]
        unmanaged-devices=interface-name:cali*;interface-name:tunl*;interface-name:vxlan.calico
      dest: /etc/NetworkManager/conf.d/calico.conf
      owner: root
      group: root
      mode: 0644

  - name: Include reboot role
    include_role:
      name: reboot

  handlers:
    - name: reload sysctl
      shell: sysctl --system

    - name: restart docker
      systemd:
        name: docker
        state: restarted

    - name: update-grub
      shell: |
        update-grub
        touch /var/run/reboot-required
